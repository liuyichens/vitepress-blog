// .vitepress/config.mjs
import { defineConfig } from "file:///D:/codespace/blog/vitepress-demo/node_modules/.pnpm/vitepress@1.0.0-rc.25_postcss@8.4.31_typescript@5.2.2/node_modules/vitepress/dist/node/index.js";

// config/index.js
var blogConfig = {
  defaultAuthor: "LiuYichen",
  defaultCategory: "article",
  pageSize: 10,
  blogPattern: "blog/detail"
};

// utils/loadSideBar.js
import { globby } from "file:///D:/codespace/blog/vitepress-demo/node_modules/.pnpm/globby@13.2.2/node_modules/globby/index.js";
import matter from "file:///D:/codespace/blog/vitepress-demo/node_modules/.pnpm/gray-matter@4.0.3/node_modules/gray-matter/index.js";

// .vitepress/config.mjs
import AutoSidebar from "file:///D:/codespace/blog/vitepress-demo/node_modules/.pnpm/vite-plugin-vitepress-auto-sidebar@1.6.1_eslint@8.53.0_typescript@5.2.2_vite@4.5.0_vitepress@1.0.0-rc.25/node_modules/vite-plugin-vitepress-auto-sidebar/dist/index.mjs";
console.log("config");
var config_default = defineConfig({
  title: "My Log",
  description: "A Blog Site",
  markdown: {
    theme: "material-theme-palenight",
    lineNumbers: true,
    // adjust how header anchors are generated,
    // useful for integrating with tools that use different conventions
    config: (md) => {
    }
  },
  ignoreDeadLinks: true,
  themeConfig: {
    search: {
      provider: "local"
    },
    outline: {
      label: "\u672C\u7AE0\u76EE\u5F55",
      level: [2, 3, 4]
    },
    // https://vitepress.dev/reference/default-theme-config
    nav: nav(),
    // sidebar: {
    //   "/examples/": examples(),
    //   "/favor/": favor(),
    //   "/note/HTML": await htmlSideBar()
    // },
    socialLinks: [
      { icon: "github", link: "https://github.com/vuejs/vitepress" }
    ],
    footer: {
      message: 'Released under the <a href="https://github.com/vuejs/vitepress/blob/main/LICENSE">MIT License</a>.',
      copyright: 'Copyright \xA9 2019-present <a href="https://github.com/yyx990803">LiuYichen</a>'
    }
  },
  async transformPageData(pageData, ctx) {
    await processData(pageData, ctx);
  },
  vite: {
    plugins: [
      AutoSidebar({
        path: "/note",
        ignoreIndexItem: true
      })
    ]
  }
});
async function processData(pageData, ctx, aside = "left", sidebar = false) {
  var _a;
  const postPattern = ((_a = blogConfig) == null ? void 0 : _a.blogPattern) ?? "blog/detail";
  if (pageData.relativePath.includes(postPattern)) {
    pageData.frontmatter.blog = "post";
    pageData.frontmatter.aside = aside;
    pageData.frontmatter.sidebar = sidebar;
    pageData.frontmatter.prev = false;
    pageData.frontmatter.next = false;
  }
}
function nav() {
  return [
    { text: "\u9996\u9875", link: "/" },
    { text: "\u6587\u7AE0", link: "/blog/", activeMatch: "/blog/" },
    { text: "\u5206\u7C7B", link: "/category/", activeMatch: "/category/" },
    { text: "\u6807\u7B7E", link: "/tag/", activeMatch: "/tag/" },
    { text: "\u5F52\u6863", link: "/archive/", activeMatch: "/archive/" },
    {
      text: "\u6536\u85CF",
      activeMatch: "/favor/",
      items: favor()
    },
    {
      text: "\u6280\u672F\u7B14\u8BB0",
      items: notes()
    },
    { text: "\u6848\u4F8B", link: "/examples/", activeMatch: "/examples/" }
  ];
}
function favor() {
  return [{ text: "CSS \u52A8\u753B", link: "/favor/css/css-animation" }];
}
function notes() {
  return [
    { text: "HTML", link: "/note/HTML/" },
    { text: "CSS", link: "/note/CSS" }
  ];
}
export {
  config_default as default,
  processData
};
//# sourceMappingURL=data:application/json;base64,
